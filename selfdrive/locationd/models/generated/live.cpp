#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4036743294061050586) {
   out_4036743294061050586[0] = 0;
   out_4036743294061050586[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4036743294061050586[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4036743294061050586[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4036743294061050586[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4036743294061050586[5] = -sin(in_vec[1]);
   out_4036743294061050586[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4036743294061050586[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4036743294061050586[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4036743294061050586[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4036743294061050586[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4036743294061050586[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4036743294061050586[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4036743294061050586[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4036743294061050586[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4036743294061050586[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4036743294061050586[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4036743294061050586[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6947062082576798062) {
   out_6947062082576798062[0] = delta_x[0] + nom_x[0];
   out_6947062082576798062[1] = delta_x[1] + nom_x[1];
   out_6947062082576798062[2] = delta_x[2] + nom_x[2];
   out_6947062082576798062[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6947062082576798062[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6947062082576798062[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6947062082576798062[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6947062082576798062[7] = delta_x[6] + nom_x[7];
   out_6947062082576798062[8] = delta_x[7] + nom_x[8];
   out_6947062082576798062[9] = delta_x[8] + nom_x[9];
   out_6947062082576798062[10] = delta_x[9] + nom_x[10];
   out_6947062082576798062[11] = delta_x[10] + nom_x[11];
   out_6947062082576798062[12] = delta_x[11] + nom_x[12];
   out_6947062082576798062[13] = delta_x[12] + nom_x[13];
   out_6947062082576798062[14] = delta_x[13] + nom_x[14];
   out_6947062082576798062[15] = delta_x[14] + nom_x[15];
   out_6947062082576798062[16] = delta_x[15] + nom_x[16];
   out_6947062082576798062[17] = delta_x[16] + nom_x[17];
   out_6947062082576798062[18] = delta_x[17] + nom_x[18];
   out_6947062082576798062[19] = delta_x[18] + nom_x[19];
   out_6947062082576798062[20] = delta_x[19] + nom_x[20];
   out_6947062082576798062[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8661898495616572542) {
   out_8661898495616572542[0] = -nom_x[0] + true_x[0];
   out_8661898495616572542[1] = -nom_x[1] + true_x[1];
   out_8661898495616572542[2] = -nom_x[2] + true_x[2];
   out_8661898495616572542[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8661898495616572542[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8661898495616572542[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8661898495616572542[6] = -nom_x[7] + true_x[7];
   out_8661898495616572542[7] = -nom_x[8] + true_x[8];
   out_8661898495616572542[8] = -nom_x[9] + true_x[9];
   out_8661898495616572542[9] = -nom_x[10] + true_x[10];
   out_8661898495616572542[10] = -nom_x[11] + true_x[11];
   out_8661898495616572542[11] = -nom_x[12] + true_x[12];
   out_8661898495616572542[12] = -nom_x[13] + true_x[13];
   out_8661898495616572542[13] = -nom_x[14] + true_x[14];
   out_8661898495616572542[14] = -nom_x[15] + true_x[15];
   out_8661898495616572542[15] = -nom_x[16] + true_x[16];
   out_8661898495616572542[16] = -nom_x[17] + true_x[17];
   out_8661898495616572542[17] = -nom_x[18] + true_x[18];
   out_8661898495616572542[18] = -nom_x[19] + true_x[19];
   out_8661898495616572542[19] = -nom_x[20] + true_x[20];
   out_8661898495616572542[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4036017927418152076) {
   out_4036017927418152076[0] = 1.0;
   out_4036017927418152076[1] = 0;
   out_4036017927418152076[2] = 0;
   out_4036017927418152076[3] = 0;
   out_4036017927418152076[4] = 0;
   out_4036017927418152076[5] = 0;
   out_4036017927418152076[6] = 0;
   out_4036017927418152076[7] = 0;
   out_4036017927418152076[8] = 0;
   out_4036017927418152076[9] = 0;
   out_4036017927418152076[10] = 0;
   out_4036017927418152076[11] = 0;
   out_4036017927418152076[12] = 0;
   out_4036017927418152076[13] = 0;
   out_4036017927418152076[14] = 0;
   out_4036017927418152076[15] = 0;
   out_4036017927418152076[16] = 0;
   out_4036017927418152076[17] = 0;
   out_4036017927418152076[18] = 0;
   out_4036017927418152076[19] = 0;
   out_4036017927418152076[20] = 0;
   out_4036017927418152076[21] = 0;
   out_4036017927418152076[22] = 1.0;
   out_4036017927418152076[23] = 0;
   out_4036017927418152076[24] = 0;
   out_4036017927418152076[25] = 0;
   out_4036017927418152076[26] = 0;
   out_4036017927418152076[27] = 0;
   out_4036017927418152076[28] = 0;
   out_4036017927418152076[29] = 0;
   out_4036017927418152076[30] = 0;
   out_4036017927418152076[31] = 0;
   out_4036017927418152076[32] = 0;
   out_4036017927418152076[33] = 0;
   out_4036017927418152076[34] = 0;
   out_4036017927418152076[35] = 0;
   out_4036017927418152076[36] = 0;
   out_4036017927418152076[37] = 0;
   out_4036017927418152076[38] = 0;
   out_4036017927418152076[39] = 0;
   out_4036017927418152076[40] = 0;
   out_4036017927418152076[41] = 0;
   out_4036017927418152076[42] = 0;
   out_4036017927418152076[43] = 0;
   out_4036017927418152076[44] = 1.0;
   out_4036017927418152076[45] = 0;
   out_4036017927418152076[46] = 0;
   out_4036017927418152076[47] = 0;
   out_4036017927418152076[48] = 0;
   out_4036017927418152076[49] = 0;
   out_4036017927418152076[50] = 0;
   out_4036017927418152076[51] = 0;
   out_4036017927418152076[52] = 0;
   out_4036017927418152076[53] = 0;
   out_4036017927418152076[54] = 0;
   out_4036017927418152076[55] = 0;
   out_4036017927418152076[56] = 0;
   out_4036017927418152076[57] = 0;
   out_4036017927418152076[58] = 0;
   out_4036017927418152076[59] = 0;
   out_4036017927418152076[60] = 0;
   out_4036017927418152076[61] = 0;
   out_4036017927418152076[62] = 0;
   out_4036017927418152076[63] = 0;
   out_4036017927418152076[64] = 0;
   out_4036017927418152076[65] = 0;
   out_4036017927418152076[66] = -0.5*state[4];
   out_4036017927418152076[67] = -0.5*state[5];
   out_4036017927418152076[68] = -0.5*state[6];
   out_4036017927418152076[69] = 0;
   out_4036017927418152076[70] = 0;
   out_4036017927418152076[71] = 0;
   out_4036017927418152076[72] = 0;
   out_4036017927418152076[73] = 0;
   out_4036017927418152076[74] = 0;
   out_4036017927418152076[75] = 0;
   out_4036017927418152076[76] = 0;
   out_4036017927418152076[77] = 0;
   out_4036017927418152076[78] = 0;
   out_4036017927418152076[79] = 0;
   out_4036017927418152076[80] = 0;
   out_4036017927418152076[81] = 0;
   out_4036017927418152076[82] = 0;
   out_4036017927418152076[83] = 0;
   out_4036017927418152076[84] = 0;
   out_4036017927418152076[85] = 0;
   out_4036017927418152076[86] = 0;
   out_4036017927418152076[87] = 0.5*state[3];
   out_4036017927418152076[88] = 0.5*state[6];
   out_4036017927418152076[89] = -0.5*state[5];
   out_4036017927418152076[90] = 0;
   out_4036017927418152076[91] = 0;
   out_4036017927418152076[92] = 0;
   out_4036017927418152076[93] = 0;
   out_4036017927418152076[94] = 0;
   out_4036017927418152076[95] = 0;
   out_4036017927418152076[96] = 0;
   out_4036017927418152076[97] = 0;
   out_4036017927418152076[98] = 0;
   out_4036017927418152076[99] = 0;
   out_4036017927418152076[100] = 0;
   out_4036017927418152076[101] = 0;
   out_4036017927418152076[102] = 0;
   out_4036017927418152076[103] = 0;
   out_4036017927418152076[104] = 0;
   out_4036017927418152076[105] = 0;
   out_4036017927418152076[106] = 0;
   out_4036017927418152076[107] = 0;
   out_4036017927418152076[108] = -0.5*state[6];
   out_4036017927418152076[109] = 0.5*state[3];
   out_4036017927418152076[110] = 0.5*state[4];
   out_4036017927418152076[111] = 0;
   out_4036017927418152076[112] = 0;
   out_4036017927418152076[113] = 0;
   out_4036017927418152076[114] = 0;
   out_4036017927418152076[115] = 0;
   out_4036017927418152076[116] = 0;
   out_4036017927418152076[117] = 0;
   out_4036017927418152076[118] = 0;
   out_4036017927418152076[119] = 0;
   out_4036017927418152076[120] = 0;
   out_4036017927418152076[121] = 0;
   out_4036017927418152076[122] = 0;
   out_4036017927418152076[123] = 0;
   out_4036017927418152076[124] = 0;
   out_4036017927418152076[125] = 0;
   out_4036017927418152076[126] = 0;
   out_4036017927418152076[127] = 0;
   out_4036017927418152076[128] = 0;
   out_4036017927418152076[129] = 0.5*state[5];
   out_4036017927418152076[130] = -0.5*state[4];
   out_4036017927418152076[131] = 0.5*state[3];
   out_4036017927418152076[132] = 0;
   out_4036017927418152076[133] = 0;
   out_4036017927418152076[134] = 0;
   out_4036017927418152076[135] = 0;
   out_4036017927418152076[136] = 0;
   out_4036017927418152076[137] = 0;
   out_4036017927418152076[138] = 0;
   out_4036017927418152076[139] = 0;
   out_4036017927418152076[140] = 0;
   out_4036017927418152076[141] = 0;
   out_4036017927418152076[142] = 0;
   out_4036017927418152076[143] = 0;
   out_4036017927418152076[144] = 0;
   out_4036017927418152076[145] = 0;
   out_4036017927418152076[146] = 0;
   out_4036017927418152076[147] = 0;
   out_4036017927418152076[148] = 0;
   out_4036017927418152076[149] = 0;
   out_4036017927418152076[150] = 0;
   out_4036017927418152076[151] = 0;
   out_4036017927418152076[152] = 0;
   out_4036017927418152076[153] = 1.0;
   out_4036017927418152076[154] = 0;
   out_4036017927418152076[155] = 0;
   out_4036017927418152076[156] = 0;
   out_4036017927418152076[157] = 0;
   out_4036017927418152076[158] = 0;
   out_4036017927418152076[159] = 0;
   out_4036017927418152076[160] = 0;
   out_4036017927418152076[161] = 0;
   out_4036017927418152076[162] = 0;
   out_4036017927418152076[163] = 0;
   out_4036017927418152076[164] = 0;
   out_4036017927418152076[165] = 0;
   out_4036017927418152076[166] = 0;
   out_4036017927418152076[167] = 0;
   out_4036017927418152076[168] = 0;
   out_4036017927418152076[169] = 0;
   out_4036017927418152076[170] = 0;
   out_4036017927418152076[171] = 0;
   out_4036017927418152076[172] = 0;
   out_4036017927418152076[173] = 0;
   out_4036017927418152076[174] = 0;
   out_4036017927418152076[175] = 1.0;
   out_4036017927418152076[176] = 0;
   out_4036017927418152076[177] = 0;
   out_4036017927418152076[178] = 0;
   out_4036017927418152076[179] = 0;
   out_4036017927418152076[180] = 0;
   out_4036017927418152076[181] = 0;
   out_4036017927418152076[182] = 0;
   out_4036017927418152076[183] = 0;
   out_4036017927418152076[184] = 0;
   out_4036017927418152076[185] = 0;
   out_4036017927418152076[186] = 0;
   out_4036017927418152076[187] = 0;
   out_4036017927418152076[188] = 0;
   out_4036017927418152076[189] = 0;
   out_4036017927418152076[190] = 0;
   out_4036017927418152076[191] = 0;
   out_4036017927418152076[192] = 0;
   out_4036017927418152076[193] = 0;
   out_4036017927418152076[194] = 0;
   out_4036017927418152076[195] = 0;
   out_4036017927418152076[196] = 0;
   out_4036017927418152076[197] = 1.0;
   out_4036017927418152076[198] = 0;
   out_4036017927418152076[199] = 0;
   out_4036017927418152076[200] = 0;
   out_4036017927418152076[201] = 0;
   out_4036017927418152076[202] = 0;
   out_4036017927418152076[203] = 0;
   out_4036017927418152076[204] = 0;
   out_4036017927418152076[205] = 0;
   out_4036017927418152076[206] = 0;
   out_4036017927418152076[207] = 0;
   out_4036017927418152076[208] = 0;
   out_4036017927418152076[209] = 0;
   out_4036017927418152076[210] = 0;
   out_4036017927418152076[211] = 0;
   out_4036017927418152076[212] = 0;
   out_4036017927418152076[213] = 0;
   out_4036017927418152076[214] = 0;
   out_4036017927418152076[215] = 0;
   out_4036017927418152076[216] = 0;
   out_4036017927418152076[217] = 0;
   out_4036017927418152076[218] = 0;
   out_4036017927418152076[219] = 1.0;
   out_4036017927418152076[220] = 0;
   out_4036017927418152076[221] = 0;
   out_4036017927418152076[222] = 0;
   out_4036017927418152076[223] = 0;
   out_4036017927418152076[224] = 0;
   out_4036017927418152076[225] = 0;
   out_4036017927418152076[226] = 0;
   out_4036017927418152076[227] = 0;
   out_4036017927418152076[228] = 0;
   out_4036017927418152076[229] = 0;
   out_4036017927418152076[230] = 0;
   out_4036017927418152076[231] = 0;
   out_4036017927418152076[232] = 0;
   out_4036017927418152076[233] = 0;
   out_4036017927418152076[234] = 0;
   out_4036017927418152076[235] = 0;
   out_4036017927418152076[236] = 0;
   out_4036017927418152076[237] = 0;
   out_4036017927418152076[238] = 0;
   out_4036017927418152076[239] = 0;
   out_4036017927418152076[240] = 0;
   out_4036017927418152076[241] = 1.0;
   out_4036017927418152076[242] = 0;
   out_4036017927418152076[243] = 0;
   out_4036017927418152076[244] = 0;
   out_4036017927418152076[245] = 0;
   out_4036017927418152076[246] = 0;
   out_4036017927418152076[247] = 0;
   out_4036017927418152076[248] = 0;
   out_4036017927418152076[249] = 0;
   out_4036017927418152076[250] = 0;
   out_4036017927418152076[251] = 0;
   out_4036017927418152076[252] = 0;
   out_4036017927418152076[253] = 0;
   out_4036017927418152076[254] = 0;
   out_4036017927418152076[255] = 0;
   out_4036017927418152076[256] = 0;
   out_4036017927418152076[257] = 0;
   out_4036017927418152076[258] = 0;
   out_4036017927418152076[259] = 0;
   out_4036017927418152076[260] = 0;
   out_4036017927418152076[261] = 0;
   out_4036017927418152076[262] = 0;
   out_4036017927418152076[263] = 1.0;
   out_4036017927418152076[264] = 0;
   out_4036017927418152076[265] = 0;
   out_4036017927418152076[266] = 0;
   out_4036017927418152076[267] = 0;
   out_4036017927418152076[268] = 0;
   out_4036017927418152076[269] = 0;
   out_4036017927418152076[270] = 0;
   out_4036017927418152076[271] = 0;
   out_4036017927418152076[272] = 0;
   out_4036017927418152076[273] = 0;
   out_4036017927418152076[274] = 0;
   out_4036017927418152076[275] = 0;
   out_4036017927418152076[276] = 0;
   out_4036017927418152076[277] = 0;
   out_4036017927418152076[278] = 0;
   out_4036017927418152076[279] = 0;
   out_4036017927418152076[280] = 0;
   out_4036017927418152076[281] = 0;
   out_4036017927418152076[282] = 0;
   out_4036017927418152076[283] = 0;
   out_4036017927418152076[284] = 0;
   out_4036017927418152076[285] = 1.0;
   out_4036017927418152076[286] = 0;
   out_4036017927418152076[287] = 0;
   out_4036017927418152076[288] = 0;
   out_4036017927418152076[289] = 0;
   out_4036017927418152076[290] = 0;
   out_4036017927418152076[291] = 0;
   out_4036017927418152076[292] = 0;
   out_4036017927418152076[293] = 0;
   out_4036017927418152076[294] = 0;
   out_4036017927418152076[295] = 0;
   out_4036017927418152076[296] = 0;
   out_4036017927418152076[297] = 0;
   out_4036017927418152076[298] = 0;
   out_4036017927418152076[299] = 0;
   out_4036017927418152076[300] = 0;
   out_4036017927418152076[301] = 0;
   out_4036017927418152076[302] = 0;
   out_4036017927418152076[303] = 0;
   out_4036017927418152076[304] = 0;
   out_4036017927418152076[305] = 0;
   out_4036017927418152076[306] = 0;
   out_4036017927418152076[307] = 1.0;
   out_4036017927418152076[308] = 0;
   out_4036017927418152076[309] = 0;
   out_4036017927418152076[310] = 0;
   out_4036017927418152076[311] = 0;
   out_4036017927418152076[312] = 0;
   out_4036017927418152076[313] = 0;
   out_4036017927418152076[314] = 0;
   out_4036017927418152076[315] = 0;
   out_4036017927418152076[316] = 0;
   out_4036017927418152076[317] = 0;
   out_4036017927418152076[318] = 0;
   out_4036017927418152076[319] = 0;
   out_4036017927418152076[320] = 0;
   out_4036017927418152076[321] = 0;
   out_4036017927418152076[322] = 0;
   out_4036017927418152076[323] = 0;
   out_4036017927418152076[324] = 0;
   out_4036017927418152076[325] = 0;
   out_4036017927418152076[326] = 0;
   out_4036017927418152076[327] = 0;
   out_4036017927418152076[328] = 0;
   out_4036017927418152076[329] = 1.0;
   out_4036017927418152076[330] = 0;
   out_4036017927418152076[331] = 0;
   out_4036017927418152076[332] = 0;
   out_4036017927418152076[333] = 0;
   out_4036017927418152076[334] = 0;
   out_4036017927418152076[335] = 0;
   out_4036017927418152076[336] = 0;
   out_4036017927418152076[337] = 0;
   out_4036017927418152076[338] = 0;
   out_4036017927418152076[339] = 0;
   out_4036017927418152076[340] = 0;
   out_4036017927418152076[341] = 0;
   out_4036017927418152076[342] = 0;
   out_4036017927418152076[343] = 0;
   out_4036017927418152076[344] = 0;
   out_4036017927418152076[345] = 0;
   out_4036017927418152076[346] = 0;
   out_4036017927418152076[347] = 0;
   out_4036017927418152076[348] = 0;
   out_4036017927418152076[349] = 0;
   out_4036017927418152076[350] = 0;
   out_4036017927418152076[351] = 1.0;
   out_4036017927418152076[352] = 0;
   out_4036017927418152076[353] = 0;
   out_4036017927418152076[354] = 0;
   out_4036017927418152076[355] = 0;
   out_4036017927418152076[356] = 0;
   out_4036017927418152076[357] = 0;
   out_4036017927418152076[358] = 0;
   out_4036017927418152076[359] = 0;
   out_4036017927418152076[360] = 0;
   out_4036017927418152076[361] = 0;
   out_4036017927418152076[362] = 0;
   out_4036017927418152076[363] = 0;
   out_4036017927418152076[364] = 0;
   out_4036017927418152076[365] = 0;
   out_4036017927418152076[366] = 0;
   out_4036017927418152076[367] = 0;
   out_4036017927418152076[368] = 0;
   out_4036017927418152076[369] = 0;
   out_4036017927418152076[370] = 0;
   out_4036017927418152076[371] = 0;
   out_4036017927418152076[372] = 0;
   out_4036017927418152076[373] = 1.0;
   out_4036017927418152076[374] = 0;
   out_4036017927418152076[375] = 0;
   out_4036017927418152076[376] = 0;
   out_4036017927418152076[377] = 0;
   out_4036017927418152076[378] = 0;
   out_4036017927418152076[379] = 0;
   out_4036017927418152076[380] = 0;
   out_4036017927418152076[381] = 0;
   out_4036017927418152076[382] = 0;
   out_4036017927418152076[383] = 0;
   out_4036017927418152076[384] = 0;
   out_4036017927418152076[385] = 0;
   out_4036017927418152076[386] = 0;
   out_4036017927418152076[387] = 0;
   out_4036017927418152076[388] = 0;
   out_4036017927418152076[389] = 0;
   out_4036017927418152076[390] = 0;
   out_4036017927418152076[391] = 0;
   out_4036017927418152076[392] = 0;
   out_4036017927418152076[393] = 0;
   out_4036017927418152076[394] = 0;
   out_4036017927418152076[395] = 1.0;
   out_4036017927418152076[396] = 0;
   out_4036017927418152076[397] = 0;
   out_4036017927418152076[398] = 0;
   out_4036017927418152076[399] = 0;
   out_4036017927418152076[400] = 0;
   out_4036017927418152076[401] = 0;
   out_4036017927418152076[402] = 0;
   out_4036017927418152076[403] = 0;
   out_4036017927418152076[404] = 0;
   out_4036017927418152076[405] = 0;
   out_4036017927418152076[406] = 0;
   out_4036017927418152076[407] = 0;
   out_4036017927418152076[408] = 0;
   out_4036017927418152076[409] = 0;
   out_4036017927418152076[410] = 0;
   out_4036017927418152076[411] = 0;
   out_4036017927418152076[412] = 0;
   out_4036017927418152076[413] = 0;
   out_4036017927418152076[414] = 0;
   out_4036017927418152076[415] = 0;
   out_4036017927418152076[416] = 0;
   out_4036017927418152076[417] = 1.0;
   out_4036017927418152076[418] = 0;
   out_4036017927418152076[419] = 0;
   out_4036017927418152076[420] = 0;
   out_4036017927418152076[421] = 0;
   out_4036017927418152076[422] = 0;
   out_4036017927418152076[423] = 0;
   out_4036017927418152076[424] = 0;
   out_4036017927418152076[425] = 0;
   out_4036017927418152076[426] = 0;
   out_4036017927418152076[427] = 0;
   out_4036017927418152076[428] = 0;
   out_4036017927418152076[429] = 0;
   out_4036017927418152076[430] = 0;
   out_4036017927418152076[431] = 0;
   out_4036017927418152076[432] = 0;
   out_4036017927418152076[433] = 0;
   out_4036017927418152076[434] = 0;
   out_4036017927418152076[435] = 0;
   out_4036017927418152076[436] = 0;
   out_4036017927418152076[437] = 0;
   out_4036017927418152076[438] = 0;
   out_4036017927418152076[439] = 1.0;
   out_4036017927418152076[440] = 0;
   out_4036017927418152076[441] = 0;
   out_4036017927418152076[442] = 0;
   out_4036017927418152076[443] = 0;
   out_4036017927418152076[444] = 0;
   out_4036017927418152076[445] = 0;
   out_4036017927418152076[446] = 0;
   out_4036017927418152076[447] = 0;
   out_4036017927418152076[448] = 0;
   out_4036017927418152076[449] = 0;
   out_4036017927418152076[450] = 0;
   out_4036017927418152076[451] = 0;
   out_4036017927418152076[452] = 0;
   out_4036017927418152076[453] = 0;
   out_4036017927418152076[454] = 0;
   out_4036017927418152076[455] = 0;
   out_4036017927418152076[456] = 0;
   out_4036017927418152076[457] = 0;
   out_4036017927418152076[458] = 0;
   out_4036017927418152076[459] = 0;
   out_4036017927418152076[460] = 0;
   out_4036017927418152076[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8391428159294924764) {
   out_8391428159294924764[0] = dt*state[7] + state[0];
   out_8391428159294924764[1] = dt*state[8] + state[1];
   out_8391428159294924764[2] = dt*state[9] + state[2];
   out_8391428159294924764[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8391428159294924764[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8391428159294924764[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8391428159294924764[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8391428159294924764[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8391428159294924764[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8391428159294924764[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8391428159294924764[10] = state[10];
   out_8391428159294924764[11] = state[11];
   out_8391428159294924764[12] = state[12];
   out_8391428159294924764[13] = state[13];
   out_8391428159294924764[14] = state[14];
   out_8391428159294924764[15] = state[15];
   out_8391428159294924764[16] = state[16];
   out_8391428159294924764[17] = state[17];
   out_8391428159294924764[18] = state[18];
   out_8391428159294924764[19] = state[19];
   out_8391428159294924764[20] = state[20];
   out_8391428159294924764[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5927393985392724208) {
   out_5927393985392724208[0] = 1;
   out_5927393985392724208[1] = 0;
   out_5927393985392724208[2] = 0;
   out_5927393985392724208[3] = 0;
   out_5927393985392724208[4] = 0;
   out_5927393985392724208[5] = 0;
   out_5927393985392724208[6] = dt;
   out_5927393985392724208[7] = 0;
   out_5927393985392724208[8] = 0;
   out_5927393985392724208[9] = 0;
   out_5927393985392724208[10] = 0;
   out_5927393985392724208[11] = 0;
   out_5927393985392724208[12] = 0;
   out_5927393985392724208[13] = 0;
   out_5927393985392724208[14] = 0;
   out_5927393985392724208[15] = 0;
   out_5927393985392724208[16] = 0;
   out_5927393985392724208[17] = 0;
   out_5927393985392724208[18] = 0;
   out_5927393985392724208[19] = 0;
   out_5927393985392724208[20] = 0;
   out_5927393985392724208[21] = 0;
   out_5927393985392724208[22] = 1;
   out_5927393985392724208[23] = 0;
   out_5927393985392724208[24] = 0;
   out_5927393985392724208[25] = 0;
   out_5927393985392724208[26] = 0;
   out_5927393985392724208[27] = 0;
   out_5927393985392724208[28] = dt;
   out_5927393985392724208[29] = 0;
   out_5927393985392724208[30] = 0;
   out_5927393985392724208[31] = 0;
   out_5927393985392724208[32] = 0;
   out_5927393985392724208[33] = 0;
   out_5927393985392724208[34] = 0;
   out_5927393985392724208[35] = 0;
   out_5927393985392724208[36] = 0;
   out_5927393985392724208[37] = 0;
   out_5927393985392724208[38] = 0;
   out_5927393985392724208[39] = 0;
   out_5927393985392724208[40] = 0;
   out_5927393985392724208[41] = 0;
   out_5927393985392724208[42] = 0;
   out_5927393985392724208[43] = 0;
   out_5927393985392724208[44] = 1;
   out_5927393985392724208[45] = 0;
   out_5927393985392724208[46] = 0;
   out_5927393985392724208[47] = 0;
   out_5927393985392724208[48] = 0;
   out_5927393985392724208[49] = 0;
   out_5927393985392724208[50] = dt;
   out_5927393985392724208[51] = 0;
   out_5927393985392724208[52] = 0;
   out_5927393985392724208[53] = 0;
   out_5927393985392724208[54] = 0;
   out_5927393985392724208[55] = 0;
   out_5927393985392724208[56] = 0;
   out_5927393985392724208[57] = 0;
   out_5927393985392724208[58] = 0;
   out_5927393985392724208[59] = 0;
   out_5927393985392724208[60] = 0;
   out_5927393985392724208[61] = 0;
   out_5927393985392724208[62] = 0;
   out_5927393985392724208[63] = 0;
   out_5927393985392724208[64] = 0;
   out_5927393985392724208[65] = 0;
   out_5927393985392724208[66] = 1;
   out_5927393985392724208[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5927393985392724208[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5927393985392724208[69] = 0;
   out_5927393985392724208[70] = 0;
   out_5927393985392724208[71] = 0;
   out_5927393985392724208[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5927393985392724208[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5927393985392724208[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5927393985392724208[75] = 0;
   out_5927393985392724208[76] = 0;
   out_5927393985392724208[77] = 0;
   out_5927393985392724208[78] = 0;
   out_5927393985392724208[79] = 0;
   out_5927393985392724208[80] = 0;
   out_5927393985392724208[81] = 0;
   out_5927393985392724208[82] = 0;
   out_5927393985392724208[83] = 0;
   out_5927393985392724208[84] = 0;
   out_5927393985392724208[85] = 0;
   out_5927393985392724208[86] = 0;
   out_5927393985392724208[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5927393985392724208[88] = 1;
   out_5927393985392724208[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5927393985392724208[90] = 0;
   out_5927393985392724208[91] = 0;
   out_5927393985392724208[92] = 0;
   out_5927393985392724208[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5927393985392724208[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5927393985392724208[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5927393985392724208[96] = 0;
   out_5927393985392724208[97] = 0;
   out_5927393985392724208[98] = 0;
   out_5927393985392724208[99] = 0;
   out_5927393985392724208[100] = 0;
   out_5927393985392724208[101] = 0;
   out_5927393985392724208[102] = 0;
   out_5927393985392724208[103] = 0;
   out_5927393985392724208[104] = 0;
   out_5927393985392724208[105] = 0;
   out_5927393985392724208[106] = 0;
   out_5927393985392724208[107] = 0;
   out_5927393985392724208[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5927393985392724208[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5927393985392724208[110] = 1;
   out_5927393985392724208[111] = 0;
   out_5927393985392724208[112] = 0;
   out_5927393985392724208[113] = 0;
   out_5927393985392724208[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5927393985392724208[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5927393985392724208[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5927393985392724208[117] = 0;
   out_5927393985392724208[118] = 0;
   out_5927393985392724208[119] = 0;
   out_5927393985392724208[120] = 0;
   out_5927393985392724208[121] = 0;
   out_5927393985392724208[122] = 0;
   out_5927393985392724208[123] = 0;
   out_5927393985392724208[124] = 0;
   out_5927393985392724208[125] = 0;
   out_5927393985392724208[126] = 0;
   out_5927393985392724208[127] = 0;
   out_5927393985392724208[128] = 0;
   out_5927393985392724208[129] = 0;
   out_5927393985392724208[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5927393985392724208[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5927393985392724208[132] = 1;
   out_5927393985392724208[133] = 0;
   out_5927393985392724208[134] = 0;
   out_5927393985392724208[135] = 0;
   out_5927393985392724208[136] = 0;
   out_5927393985392724208[137] = 0;
   out_5927393985392724208[138] = 0;
   out_5927393985392724208[139] = 0;
   out_5927393985392724208[140] = 0;
   out_5927393985392724208[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5927393985392724208[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5927393985392724208[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5927393985392724208[144] = 0;
   out_5927393985392724208[145] = 0;
   out_5927393985392724208[146] = 0;
   out_5927393985392724208[147] = 0;
   out_5927393985392724208[148] = 0;
   out_5927393985392724208[149] = 0;
   out_5927393985392724208[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5927393985392724208[151] = 0;
   out_5927393985392724208[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5927393985392724208[153] = 0;
   out_5927393985392724208[154] = 1;
   out_5927393985392724208[155] = 0;
   out_5927393985392724208[156] = 0;
   out_5927393985392724208[157] = 0;
   out_5927393985392724208[158] = 0;
   out_5927393985392724208[159] = 0;
   out_5927393985392724208[160] = 0;
   out_5927393985392724208[161] = 0;
   out_5927393985392724208[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5927393985392724208[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5927393985392724208[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5927393985392724208[165] = 0;
   out_5927393985392724208[166] = 0;
   out_5927393985392724208[167] = 0;
   out_5927393985392724208[168] = 0;
   out_5927393985392724208[169] = 0;
   out_5927393985392724208[170] = 0;
   out_5927393985392724208[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5927393985392724208[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5927393985392724208[173] = 0;
   out_5927393985392724208[174] = 0;
   out_5927393985392724208[175] = 0;
   out_5927393985392724208[176] = 1;
   out_5927393985392724208[177] = 0;
   out_5927393985392724208[178] = 0;
   out_5927393985392724208[179] = 0;
   out_5927393985392724208[180] = 0;
   out_5927393985392724208[181] = 0;
   out_5927393985392724208[182] = 0;
   out_5927393985392724208[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5927393985392724208[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5927393985392724208[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5927393985392724208[186] = 0;
   out_5927393985392724208[187] = 0;
   out_5927393985392724208[188] = 0;
   out_5927393985392724208[189] = 0;
   out_5927393985392724208[190] = 0;
   out_5927393985392724208[191] = 0;
   out_5927393985392724208[192] = 0;
   out_5927393985392724208[193] = 0;
   out_5927393985392724208[194] = 0;
   out_5927393985392724208[195] = 0;
   out_5927393985392724208[196] = 0;
   out_5927393985392724208[197] = 0;
   out_5927393985392724208[198] = 1;
   out_5927393985392724208[199] = 0;
   out_5927393985392724208[200] = 0;
   out_5927393985392724208[201] = 0;
   out_5927393985392724208[202] = 0;
   out_5927393985392724208[203] = 0;
   out_5927393985392724208[204] = 0;
   out_5927393985392724208[205] = 0;
   out_5927393985392724208[206] = 0;
   out_5927393985392724208[207] = 0;
   out_5927393985392724208[208] = 0;
   out_5927393985392724208[209] = 0;
   out_5927393985392724208[210] = 0;
   out_5927393985392724208[211] = 0;
   out_5927393985392724208[212] = 0;
   out_5927393985392724208[213] = 0;
   out_5927393985392724208[214] = 0;
   out_5927393985392724208[215] = 0;
   out_5927393985392724208[216] = 0;
   out_5927393985392724208[217] = 0;
   out_5927393985392724208[218] = 0;
   out_5927393985392724208[219] = 0;
   out_5927393985392724208[220] = 1;
   out_5927393985392724208[221] = 0;
   out_5927393985392724208[222] = 0;
   out_5927393985392724208[223] = 0;
   out_5927393985392724208[224] = 0;
   out_5927393985392724208[225] = 0;
   out_5927393985392724208[226] = 0;
   out_5927393985392724208[227] = 0;
   out_5927393985392724208[228] = 0;
   out_5927393985392724208[229] = 0;
   out_5927393985392724208[230] = 0;
   out_5927393985392724208[231] = 0;
   out_5927393985392724208[232] = 0;
   out_5927393985392724208[233] = 0;
   out_5927393985392724208[234] = 0;
   out_5927393985392724208[235] = 0;
   out_5927393985392724208[236] = 0;
   out_5927393985392724208[237] = 0;
   out_5927393985392724208[238] = 0;
   out_5927393985392724208[239] = 0;
   out_5927393985392724208[240] = 0;
   out_5927393985392724208[241] = 0;
   out_5927393985392724208[242] = 1;
   out_5927393985392724208[243] = 0;
   out_5927393985392724208[244] = 0;
   out_5927393985392724208[245] = 0;
   out_5927393985392724208[246] = 0;
   out_5927393985392724208[247] = 0;
   out_5927393985392724208[248] = 0;
   out_5927393985392724208[249] = 0;
   out_5927393985392724208[250] = 0;
   out_5927393985392724208[251] = 0;
   out_5927393985392724208[252] = 0;
   out_5927393985392724208[253] = 0;
   out_5927393985392724208[254] = 0;
   out_5927393985392724208[255] = 0;
   out_5927393985392724208[256] = 0;
   out_5927393985392724208[257] = 0;
   out_5927393985392724208[258] = 0;
   out_5927393985392724208[259] = 0;
   out_5927393985392724208[260] = 0;
   out_5927393985392724208[261] = 0;
   out_5927393985392724208[262] = 0;
   out_5927393985392724208[263] = 0;
   out_5927393985392724208[264] = 1;
   out_5927393985392724208[265] = 0;
   out_5927393985392724208[266] = 0;
   out_5927393985392724208[267] = 0;
   out_5927393985392724208[268] = 0;
   out_5927393985392724208[269] = 0;
   out_5927393985392724208[270] = 0;
   out_5927393985392724208[271] = 0;
   out_5927393985392724208[272] = 0;
   out_5927393985392724208[273] = 0;
   out_5927393985392724208[274] = 0;
   out_5927393985392724208[275] = 0;
   out_5927393985392724208[276] = 0;
   out_5927393985392724208[277] = 0;
   out_5927393985392724208[278] = 0;
   out_5927393985392724208[279] = 0;
   out_5927393985392724208[280] = 0;
   out_5927393985392724208[281] = 0;
   out_5927393985392724208[282] = 0;
   out_5927393985392724208[283] = 0;
   out_5927393985392724208[284] = 0;
   out_5927393985392724208[285] = 0;
   out_5927393985392724208[286] = 1;
   out_5927393985392724208[287] = 0;
   out_5927393985392724208[288] = 0;
   out_5927393985392724208[289] = 0;
   out_5927393985392724208[290] = 0;
   out_5927393985392724208[291] = 0;
   out_5927393985392724208[292] = 0;
   out_5927393985392724208[293] = 0;
   out_5927393985392724208[294] = 0;
   out_5927393985392724208[295] = 0;
   out_5927393985392724208[296] = 0;
   out_5927393985392724208[297] = 0;
   out_5927393985392724208[298] = 0;
   out_5927393985392724208[299] = 0;
   out_5927393985392724208[300] = 0;
   out_5927393985392724208[301] = 0;
   out_5927393985392724208[302] = 0;
   out_5927393985392724208[303] = 0;
   out_5927393985392724208[304] = 0;
   out_5927393985392724208[305] = 0;
   out_5927393985392724208[306] = 0;
   out_5927393985392724208[307] = 0;
   out_5927393985392724208[308] = 1;
   out_5927393985392724208[309] = 0;
   out_5927393985392724208[310] = 0;
   out_5927393985392724208[311] = 0;
   out_5927393985392724208[312] = 0;
   out_5927393985392724208[313] = 0;
   out_5927393985392724208[314] = 0;
   out_5927393985392724208[315] = 0;
   out_5927393985392724208[316] = 0;
   out_5927393985392724208[317] = 0;
   out_5927393985392724208[318] = 0;
   out_5927393985392724208[319] = 0;
   out_5927393985392724208[320] = 0;
   out_5927393985392724208[321] = 0;
   out_5927393985392724208[322] = 0;
   out_5927393985392724208[323] = 0;
   out_5927393985392724208[324] = 0;
   out_5927393985392724208[325] = 0;
   out_5927393985392724208[326] = 0;
   out_5927393985392724208[327] = 0;
   out_5927393985392724208[328] = 0;
   out_5927393985392724208[329] = 0;
   out_5927393985392724208[330] = 1;
   out_5927393985392724208[331] = 0;
   out_5927393985392724208[332] = 0;
   out_5927393985392724208[333] = 0;
   out_5927393985392724208[334] = 0;
   out_5927393985392724208[335] = 0;
   out_5927393985392724208[336] = 0;
   out_5927393985392724208[337] = 0;
   out_5927393985392724208[338] = 0;
   out_5927393985392724208[339] = 0;
   out_5927393985392724208[340] = 0;
   out_5927393985392724208[341] = 0;
   out_5927393985392724208[342] = 0;
   out_5927393985392724208[343] = 0;
   out_5927393985392724208[344] = 0;
   out_5927393985392724208[345] = 0;
   out_5927393985392724208[346] = 0;
   out_5927393985392724208[347] = 0;
   out_5927393985392724208[348] = 0;
   out_5927393985392724208[349] = 0;
   out_5927393985392724208[350] = 0;
   out_5927393985392724208[351] = 0;
   out_5927393985392724208[352] = 1;
   out_5927393985392724208[353] = 0;
   out_5927393985392724208[354] = 0;
   out_5927393985392724208[355] = 0;
   out_5927393985392724208[356] = 0;
   out_5927393985392724208[357] = 0;
   out_5927393985392724208[358] = 0;
   out_5927393985392724208[359] = 0;
   out_5927393985392724208[360] = 0;
   out_5927393985392724208[361] = 0;
   out_5927393985392724208[362] = 0;
   out_5927393985392724208[363] = 0;
   out_5927393985392724208[364] = 0;
   out_5927393985392724208[365] = 0;
   out_5927393985392724208[366] = 0;
   out_5927393985392724208[367] = 0;
   out_5927393985392724208[368] = 0;
   out_5927393985392724208[369] = 0;
   out_5927393985392724208[370] = 0;
   out_5927393985392724208[371] = 0;
   out_5927393985392724208[372] = 0;
   out_5927393985392724208[373] = 0;
   out_5927393985392724208[374] = 1;
   out_5927393985392724208[375] = 0;
   out_5927393985392724208[376] = 0;
   out_5927393985392724208[377] = 0;
   out_5927393985392724208[378] = 0;
   out_5927393985392724208[379] = 0;
   out_5927393985392724208[380] = 0;
   out_5927393985392724208[381] = 0;
   out_5927393985392724208[382] = 0;
   out_5927393985392724208[383] = 0;
   out_5927393985392724208[384] = 0;
   out_5927393985392724208[385] = 0;
   out_5927393985392724208[386] = 0;
   out_5927393985392724208[387] = 0;
   out_5927393985392724208[388] = 0;
   out_5927393985392724208[389] = 0;
   out_5927393985392724208[390] = 0;
   out_5927393985392724208[391] = 0;
   out_5927393985392724208[392] = 0;
   out_5927393985392724208[393] = 0;
   out_5927393985392724208[394] = 0;
   out_5927393985392724208[395] = 0;
   out_5927393985392724208[396] = 1;
   out_5927393985392724208[397] = 0;
   out_5927393985392724208[398] = 0;
   out_5927393985392724208[399] = 0;
   out_5927393985392724208[400] = 0;
   out_5927393985392724208[401] = 0;
   out_5927393985392724208[402] = 0;
   out_5927393985392724208[403] = 0;
   out_5927393985392724208[404] = 0;
   out_5927393985392724208[405] = 0;
   out_5927393985392724208[406] = 0;
   out_5927393985392724208[407] = 0;
   out_5927393985392724208[408] = 0;
   out_5927393985392724208[409] = 0;
   out_5927393985392724208[410] = 0;
   out_5927393985392724208[411] = 0;
   out_5927393985392724208[412] = 0;
   out_5927393985392724208[413] = 0;
   out_5927393985392724208[414] = 0;
   out_5927393985392724208[415] = 0;
   out_5927393985392724208[416] = 0;
   out_5927393985392724208[417] = 0;
   out_5927393985392724208[418] = 1;
   out_5927393985392724208[419] = 0;
   out_5927393985392724208[420] = 0;
   out_5927393985392724208[421] = 0;
   out_5927393985392724208[422] = 0;
   out_5927393985392724208[423] = 0;
   out_5927393985392724208[424] = 0;
   out_5927393985392724208[425] = 0;
   out_5927393985392724208[426] = 0;
   out_5927393985392724208[427] = 0;
   out_5927393985392724208[428] = 0;
   out_5927393985392724208[429] = 0;
   out_5927393985392724208[430] = 0;
   out_5927393985392724208[431] = 0;
   out_5927393985392724208[432] = 0;
   out_5927393985392724208[433] = 0;
   out_5927393985392724208[434] = 0;
   out_5927393985392724208[435] = 0;
   out_5927393985392724208[436] = 0;
   out_5927393985392724208[437] = 0;
   out_5927393985392724208[438] = 0;
   out_5927393985392724208[439] = 0;
   out_5927393985392724208[440] = 1;
}
void h_4(double *state, double *unused, double *out_4558481456706131091) {
   out_4558481456706131091[0] = state[10] + state[13];
   out_4558481456706131091[1] = state[11] + state[14];
   out_4558481456706131091[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8080000973382925894) {
   out_8080000973382925894[0] = 0;
   out_8080000973382925894[1] = 0;
   out_8080000973382925894[2] = 0;
   out_8080000973382925894[3] = 0;
   out_8080000973382925894[4] = 0;
   out_8080000973382925894[5] = 0;
   out_8080000973382925894[6] = 0;
   out_8080000973382925894[7] = 0;
   out_8080000973382925894[8] = 0;
   out_8080000973382925894[9] = 0;
   out_8080000973382925894[10] = 1;
   out_8080000973382925894[11] = 0;
   out_8080000973382925894[12] = 0;
   out_8080000973382925894[13] = 1;
   out_8080000973382925894[14] = 0;
   out_8080000973382925894[15] = 0;
   out_8080000973382925894[16] = 0;
   out_8080000973382925894[17] = 0;
   out_8080000973382925894[18] = 0;
   out_8080000973382925894[19] = 0;
   out_8080000973382925894[20] = 0;
   out_8080000973382925894[21] = 0;
   out_8080000973382925894[22] = 0;
   out_8080000973382925894[23] = 0;
   out_8080000973382925894[24] = 0;
   out_8080000973382925894[25] = 0;
   out_8080000973382925894[26] = 0;
   out_8080000973382925894[27] = 0;
   out_8080000973382925894[28] = 0;
   out_8080000973382925894[29] = 0;
   out_8080000973382925894[30] = 0;
   out_8080000973382925894[31] = 0;
   out_8080000973382925894[32] = 0;
   out_8080000973382925894[33] = 1;
   out_8080000973382925894[34] = 0;
   out_8080000973382925894[35] = 0;
   out_8080000973382925894[36] = 1;
   out_8080000973382925894[37] = 0;
   out_8080000973382925894[38] = 0;
   out_8080000973382925894[39] = 0;
   out_8080000973382925894[40] = 0;
   out_8080000973382925894[41] = 0;
   out_8080000973382925894[42] = 0;
   out_8080000973382925894[43] = 0;
   out_8080000973382925894[44] = 0;
   out_8080000973382925894[45] = 0;
   out_8080000973382925894[46] = 0;
   out_8080000973382925894[47] = 0;
   out_8080000973382925894[48] = 0;
   out_8080000973382925894[49] = 0;
   out_8080000973382925894[50] = 0;
   out_8080000973382925894[51] = 0;
   out_8080000973382925894[52] = 0;
   out_8080000973382925894[53] = 0;
   out_8080000973382925894[54] = 0;
   out_8080000973382925894[55] = 0;
   out_8080000973382925894[56] = 1;
   out_8080000973382925894[57] = 0;
   out_8080000973382925894[58] = 0;
   out_8080000973382925894[59] = 1;
   out_8080000973382925894[60] = 0;
   out_8080000973382925894[61] = 0;
   out_8080000973382925894[62] = 0;
   out_8080000973382925894[63] = 0;
   out_8080000973382925894[64] = 0;
   out_8080000973382925894[65] = 0;
}
void h_9(double *state, double *unused, double *out_2276892122715450524) {
   out_2276892122715450524[0] = state[10];
   out_2276892122715450524[1] = state[11];
   out_2276892122715450524[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7477881548046546380) {
   out_7477881548046546380[0] = 0;
   out_7477881548046546380[1] = 0;
   out_7477881548046546380[2] = 0;
   out_7477881548046546380[3] = 0;
   out_7477881548046546380[4] = 0;
   out_7477881548046546380[5] = 0;
   out_7477881548046546380[6] = 0;
   out_7477881548046546380[7] = 0;
   out_7477881548046546380[8] = 0;
   out_7477881548046546380[9] = 0;
   out_7477881548046546380[10] = 1;
   out_7477881548046546380[11] = 0;
   out_7477881548046546380[12] = 0;
   out_7477881548046546380[13] = 0;
   out_7477881548046546380[14] = 0;
   out_7477881548046546380[15] = 0;
   out_7477881548046546380[16] = 0;
   out_7477881548046546380[17] = 0;
   out_7477881548046546380[18] = 0;
   out_7477881548046546380[19] = 0;
   out_7477881548046546380[20] = 0;
   out_7477881548046546380[21] = 0;
   out_7477881548046546380[22] = 0;
   out_7477881548046546380[23] = 0;
   out_7477881548046546380[24] = 0;
   out_7477881548046546380[25] = 0;
   out_7477881548046546380[26] = 0;
   out_7477881548046546380[27] = 0;
   out_7477881548046546380[28] = 0;
   out_7477881548046546380[29] = 0;
   out_7477881548046546380[30] = 0;
   out_7477881548046546380[31] = 0;
   out_7477881548046546380[32] = 0;
   out_7477881548046546380[33] = 1;
   out_7477881548046546380[34] = 0;
   out_7477881548046546380[35] = 0;
   out_7477881548046546380[36] = 0;
   out_7477881548046546380[37] = 0;
   out_7477881548046546380[38] = 0;
   out_7477881548046546380[39] = 0;
   out_7477881548046546380[40] = 0;
   out_7477881548046546380[41] = 0;
   out_7477881548046546380[42] = 0;
   out_7477881548046546380[43] = 0;
   out_7477881548046546380[44] = 0;
   out_7477881548046546380[45] = 0;
   out_7477881548046546380[46] = 0;
   out_7477881548046546380[47] = 0;
   out_7477881548046546380[48] = 0;
   out_7477881548046546380[49] = 0;
   out_7477881548046546380[50] = 0;
   out_7477881548046546380[51] = 0;
   out_7477881548046546380[52] = 0;
   out_7477881548046546380[53] = 0;
   out_7477881548046546380[54] = 0;
   out_7477881548046546380[55] = 0;
   out_7477881548046546380[56] = 1;
   out_7477881548046546380[57] = 0;
   out_7477881548046546380[58] = 0;
   out_7477881548046546380[59] = 0;
   out_7477881548046546380[60] = 0;
   out_7477881548046546380[61] = 0;
   out_7477881548046546380[62] = 0;
   out_7477881548046546380[63] = 0;
   out_7477881548046546380[64] = 0;
   out_7477881548046546380[65] = 0;
}
void h_10(double *state, double *unused, double *out_4026703298045680701) {
   out_4026703298045680701[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4026703298045680701[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4026703298045680701[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2448940172280810086) {
   out_2448940172280810086[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2448940172280810086[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2448940172280810086[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2448940172280810086[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2448940172280810086[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2448940172280810086[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2448940172280810086[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2448940172280810086[7] = 0;
   out_2448940172280810086[8] = 0;
   out_2448940172280810086[9] = 0;
   out_2448940172280810086[10] = 0;
   out_2448940172280810086[11] = 0;
   out_2448940172280810086[12] = 0;
   out_2448940172280810086[13] = 0;
   out_2448940172280810086[14] = 0;
   out_2448940172280810086[15] = 0;
   out_2448940172280810086[16] = 1;
   out_2448940172280810086[17] = 0;
   out_2448940172280810086[18] = 0;
   out_2448940172280810086[19] = 1;
   out_2448940172280810086[20] = 0;
   out_2448940172280810086[21] = 0;
   out_2448940172280810086[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2448940172280810086[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2448940172280810086[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2448940172280810086[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2448940172280810086[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2448940172280810086[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2448940172280810086[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2448940172280810086[29] = 0;
   out_2448940172280810086[30] = 0;
   out_2448940172280810086[31] = 0;
   out_2448940172280810086[32] = 0;
   out_2448940172280810086[33] = 0;
   out_2448940172280810086[34] = 0;
   out_2448940172280810086[35] = 0;
   out_2448940172280810086[36] = 0;
   out_2448940172280810086[37] = 0;
   out_2448940172280810086[38] = 0;
   out_2448940172280810086[39] = 1;
   out_2448940172280810086[40] = 0;
   out_2448940172280810086[41] = 0;
   out_2448940172280810086[42] = 1;
   out_2448940172280810086[43] = 0;
   out_2448940172280810086[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2448940172280810086[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2448940172280810086[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2448940172280810086[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2448940172280810086[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2448940172280810086[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2448940172280810086[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2448940172280810086[51] = 0;
   out_2448940172280810086[52] = 0;
   out_2448940172280810086[53] = 0;
   out_2448940172280810086[54] = 0;
   out_2448940172280810086[55] = 0;
   out_2448940172280810086[56] = 0;
   out_2448940172280810086[57] = 0;
   out_2448940172280810086[58] = 0;
   out_2448940172280810086[59] = 0;
   out_2448940172280810086[60] = 0;
   out_2448940172280810086[61] = 0;
   out_2448940172280810086[62] = 1;
   out_2448940172280810086[63] = 0;
   out_2448940172280810086[64] = 0;
   out_2448940172280810086[65] = 1;
}
void h_12(double *state, double *unused, double *out_5712336716329959106) {
   out_5712336716329959106[0] = state[0];
   out_5712336716329959106[1] = state[1];
   out_5712336716329959106[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2699614786644175230) {
   out_2699614786644175230[0] = 1;
   out_2699614786644175230[1] = 0;
   out_2699614786644175230[2] = 0;
   out_2699614786644175230[3] = 0;
   out_2699614786644175230[4] = 0;
   out_2699614786644175230[5] = 0;
   out_2699614786644175230[6] = 0;
   out_2699614786644175230[7] = 0;
   out_2699614786644175230[8] = 0;
   out_2699614786644175230[9] = 0;
   out_2699614786644175230[10] = 0;
   out_2699614786644175230[11] = 0;
   out_2699614786644175230[12] = 0;
   out_2699614786644175230[13] = 0;
   out_2699614786644175230[14] = 0;
   out_2699614786644175230[15] = 0;
   out_2699614786644175230[16] = 0;
   out_2699614786644175230[17] = 0;
   out_2699614786644175230[18] = 0;
   out_2699614786644175230[19] = 0;
   out_2699614786644175230[20] = 0;
   out_2699614786644175230[21] = 0;
   out_2699614786644175230[22] = 0;
   out_2699614786644175230[23] = 1;
   out_2699614786644175230[24] = 0;
   out_2699614786644175230[25] = 0;
   out_2699614786644175230[26] = 0;
   out_2699614786644175230[27] = 0;
   out_2699614786644175230[28] = 0;
   out_2699614786644175230[29] = 0;
   out_2699614786644175230[30] = 0;
   out_2699614786644175230[31] = 0;
   out_2699614786644175230[32] = 0;
   out_2699614786644175230[33] = 0;
   out_2699614786644175230[34] = 0;
   out_2699614786644175230[35] = 0;
   out_2699614786644175230[36] = 0;
   out_2699614786644175230[37] = 0;
   out_2699614786644175230[38] = 0;
   out_2699614786644175230[39] = 0;
   out_2699614786644175230[40] = 0;
   out_2699614786644175230[41] = 0;
   out_2699614786644175230[42] = 0;
   out_2699614786644175230[43] = 0;
   out_2699614786644175230[44] = 0;
   out_2699614786644175230[45] = 0;
   out_2699614786644175230[46] = 1;
   out_2699614786644175230[47] = 0;
   out_2699614786644175230[48] = 0;
   out_2699614786644175230[49] = 0;
   out_2699614786644175230[50] = 0;
   out_2699614786644175230[51] = 0;
   out_2699614786644175230[52] = 0;
   out_2699614786644175230[53] = 0;
   out_2699614786644175230[54] = 0;
   out_2699614786644175230[55] = 0;
   out_2699614786644175230[56] = 0;
   out_2699614786644175230[57] = 0;
   out_2699614786644175230[58] = 0;
   out_2699614786644175230[59] = 0;
   out_2699614786644175230[60] = 0;
   out_2699614786644175230[61] = 0;
   out_2699614786644175230[62] = 0;
   out_2699614786644175230[63] = 0;
   out_2699614786644175230[64] = 0;
   out_2699614786644175230[65] = 0;
}
void h_35(double *state, double *unused, double *out_4970707749006197317) {
   out_4970707749006197317[0] = state[7];
   out_4970707749006197317[1] = state[8];
   out_4970707749006197317[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7000081042954018346) {
   out_7000081042954018346[0] = 0;
   out_7000081042954018346[1] = 0;
   out_7000081042954018346[2] = 0;
   out_7000081042954018346[3] = 0;
   out_7000081042954018346[4] = 0;
   out_7000081042954018346[5] = 0;
   out_7000081042954018346[6] = 0;
   out_7000081042954018346[7] = 1;
   out_7000081042954018346[8] = 0;
   out_7000081042954018346[9] = 0;
   out_7000081042954018346[10] = 0;
   out_7000081042954018346[11] = 0;
   out_7000081042954018346[12] = 0;
   out_7000081042954018346[13] = 0;
   out_7000081042954018346[14] = 0;
   out_7000081042954018346[15] = 0;
   out_7000081042954018346[16] = 0;
   out_7000081042954018346[17] = 0;
   out_7000081042954018346[18] = 0;
   out_7000081042954018346[19] = 0;
   out_7000081042954018346[20] = 0;
   out_7000081042954018346[21] = 0;
   out_7000081042954018346[22] = 0;
   out_7000081042954018346[23] = 0;
   out_7000081042954018346[24] = 0;
   out_7000081042954018346[25] = 0;
   out_7000081042954018346[26] = 0;
   out_7000081042954018346[27] = 0;
   out_7000081042954018346[28] = 0;
   out_7000081042954018346[29] = 0;
   out_7000081042954018346[30] = 1;
   out_7000081042954018346[31] = 0;
   out_7000081042954018346[32] = 0;
   out_7000081042954018346[33] = 0;
   out_7000081042954018346[34] = 0;
   out_7000081042954018346[35] = 0;
   out_7000081042954018346[36] = 0;
   out_7000081042954018346[37] = 0;
   out_7000081042954018346[38] = 0;
   out_7000081042954018346[39] = 0;
   out_7000081042954018346[40] = 0;
   out_7000081042954018346[41] = 0;
   out_7000081042954018346[42] = 0;
   out_7000081042954018346[43] = 0;
   out_7000081042954018346[44] = 0;
   out_7000081042954018346[45] = 0;
   out_7000081042954018346[46] = 0;
   out_7000081042954018346[47] = 0;
   out_7000081042954018346[48] = 0;
   out_7000081042954018346[49] = 0;
   out_7000081042954018346[50] = 0;
   out_7000081042954018346[51] = 0;
   out_7000081042954018346[52] = 0;
   out_7000081042954018346[53] = 1;
   out_7000081042954018346[54] = 0;
   out_7000081042954018346[55] = 0;
   out_7000081042954018346[56] = 0;
   out_7000081042954018346[57] = 0;
   out_7000081042954018346[58] = 0;
   out_7000081042954018346[59] = 0;
   out_7000081042954018346[60] = 0;
   out_7000081042954018346[61] = 0;
   out_7000081042954018346[62] = 0;
   out_7000081042954018346[63] = 0;
   out_7000081042954018346[64] = 0;
   out_7000081042954018346[65] = 0;
}
void h_32(double *state, double *unused, double *out_4166821487427803763) {
   out_4166821487427803763[0] = state[3];
   out_4166821487427803763[1] = state[4];
   out_4166821487427803763[2] = state[5];
   out_4166821487427803763[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4295056530052268409) {
   out_4295056530052268409[0] = 0;
   out_4295056530052268409[1] = 0;
   out_4295056530052268409[2] = 0;
   out_4295056530052268409[3] = 1;
   out_4295056530052268409[4] = 0;
   out_4295056530052268409[5] = 0;
   out_4295056530052268409[6] = 0;
   out_4295056530052268409[7] = 0;
   out_4295056530052268409[8] = 0;
   out_4295056530052268409[9] = 0;
   out_4295056530052268409[10] = 0;
   out_4295056530052268409[11] = 0;
   out_4295056530052268409[12] = 0;
   out_4295056530052268409[13] = 0;
   out_4295056530052268409[14] = 0;
   out_4295056530052268409[15] = 0;
   out_4295056530052268409[16] = 0;
   out_4295056530052268409[17] = 0;
   out_4295056530052268409[18] = 0;
   out_4295056530052268409[19] = 0;
   out_4295056530052268409[20] = 0;
   out_4295056530052268409[21] = 0;
   out_4295056530052268409[22] = 0;
   out_4295056530052268409[23] = 0;
   out_4295056530052268409[24] = 0;
   out_4295056530052268409[25] = 0;
   out_4295056530052268409[26] = 1;
   out_4295056530052268409[27] = 0;
   out_4295056530052268409[28] = 0;
   out_4295056530052268409[29] = 0;
   out_4295056530052268409[30] = 0;
   out_4295056530052268409[31] = 0;
   out_4295056530052268409[32] = 0;
   out_4295056530052268409[33] = 0;
   out_4295056530052268409[34] = 0;
   out_4295056530052268409[35] = 0;
   out_4295056530052268409[36] = 0;
   out_4295056530052268409[37] = 0;
   out_4295056530052268409[38] = 0;
   out_4295056530052268409[39] = 0;
   out_4295056530052268409[40] = 0;
   out_4295056530052268409[41] = 0;
   out_4295056530052268409[42] = 0;
   out_4295056530052268409[43] = 0;
   out_4295056530052268409[44] = 0;
   out_4295056530052268409[45] = 0;
   out_4295056530052268409[46] = 0;
   out_4295056530052268409[47] = 0;
   out_4295056530052268409[48] = 0;
   out_4295056530052268409[49] = 1;
   out_4295056530052268409[50] = 0;
   out_4295056530052268409[51] = 0;
   out_4295056530052268409[52] = 0;
   out_4295056530052268409[53] = 0;
   out_4295056530052268409[54] = 0;
   out_4295056530052268409[55] = 0;
   out_4295056530052268409[56] = 0;
   out_4295056530052268409[57] = 0;
   out_4295056530052268409[58] = 0;
   out_4295056530052268409[59] = 0;
   out_4295056530052268409[60] = 0;
   out_4295056530052268409[61] = 0;
   out_4295056530052268409[62] = 0;
   out_4295056530052268409[63] = 0;
   out_4295056530052268409[64] = 0;
   out_4295056530052268409[65] = 0;
   out_4295056530052268409[66] = 0;
   out_4295056530052268409[67] = 0;
   out_4295056530052268409[68] = 0;
   out_4295056530052268409[69] = 0;
   out_4295056530052268409[70] = 0;
   out_4295056530052268409[71] = 0;
   out_4295056530052268409[72] = 1;
   out_4295056530052268409[73] = 0;
   out_4295056530052268409[74] = 0;
   out_4295056530052268409[75] = 0;
   out_4295056530052268409[76] = 0;
   out_4295056530052268409[77] = 0;
   out_4295056530052268409[78] = 0;
   out_4295056530052268409[79] = 0;
   out_4295056530052268409[80] = 0;
   out_4295056530052268409[81] = 0;
   out_4295056530052268409[82] = 0;
   out_4295056530052268409[83] = 0;
   out_4295056530052268409[84] = 0;
   out_4295056530052268409[85] = 0;
   out_4295056530052268409[86] = 0;
   out_4295056530052268409[87] = 0;
}
void h_13(double *state, double *unused, double *out_1717094679509158869) {
   out_1717094679509158869[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1717094679509158869[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1717094679509158869[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1053869890820687685) {
   out_1053869890820687685[0] = 0;
   out_1053869890820687685[1] = 0;
   out_1053869890820687685[2] = 0;
   out_1053869890820687685[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1053869890820687685[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1053869890820687685[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1053869890820687685[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1053869890820687685[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1053869890820687685[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1053869890820687685[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1053869890820687685[10] = 0;
   out_1053869890820687685[11] = 0;
   out_1053869890820687685[12] = 0;
   out_1053869890820687685[13] = 0;
   out_1053869890820687685[14] = 0;
   out_1053869890820687685[15] = 0;
   out_1053869890820687685[16] = 0;
   out_1053869890820687685[17] = 0;
   out_1053869890820687685[18] = 0;
   out_1053869890820687685[19] = 0;
   out_1053869890820687685[20] = 0;
   out_1053869890820687685[21] = 0;
   out_1053869890820687685[22] = 0;
   out_1053869890820687685[23] = 0;
   out_1053869890820687685[24] = 0;
   out_1053869890820687685[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1053869890820687685[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1053869890820687685[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1053869890820687685[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1053869890820687685[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1053869890820687685[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1053869890820687685[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1053869890820687685[32] = 0;
   out_1053869890820687685[33] = 0;
   out_1053869890820687685[34] = 0;
   out_1053869890820687685[35] = 0;
   out_1053869890820687685[36] = 0;
   out_1053869890820687685[37] = 0;
   out_1053869890820687685[38] = 0;
   out_1053869890820687685[39] = 0;
   out_1053869890820687685[40] = 0;
   out_1053869890820687685[41] = 0;
   out_1053869890820687685[42] = 0;
   out_1053869890820687685[43] = 0;
   out_1053869890820687685[44] = 0;
   out_1053869890820687685[45] = 0;
   out_1053869890820687685[46] = 0;
   out_1053869890820687685[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1053869890820687685[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1053869890820687685[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1053869890820687685[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1053869890820687685[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1053869890820687685[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1053869890820687685[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1053869890820687685[54] = 0;
   out_1053869890820687685[55] = 0;
   out_1053869890820687685[56] = 0;
   out_1053869890820687685[57] = 0;
   out_1053869890820687685[58] = 0;
   out_1053869890820687685[59] = 0;
   out_1053869890820687685[60] = 0;
   out_1053869890820687685[61] = 0;
   out_1053869890820687685[62] = 0;
   out_1053869890820687685[63] = 0;
   out_1053869890820687685[64] = 0;
   out_1053869890820687685[65] = 0;
}
void h_14(double *state, double *unused, double *out_2276892122715450524) {
   out_2276892122715450524[0] = state[10];
   out_2276892122715450524[1] = state[11];
   out_2276892122715450524[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7477881548046546380) {
   out_7477881548046546380[0] = 0;
   out_7477881548046546380[1] = 0;
   out_7477881548046546380[2] = 0;
   out_7477881548046546380[3] = 0;
   out_7477881548046546380[4] = 0;
   out_7477881548046546380[5] = 0;
   out_7477881548046546380[6] = 0;
   out_7477881548046546380[7] = 0;
   out_7477881548046546380[8] = 0;
   out_7477881548046546380[9] = 0;
   out_7477881548046546380[10] = 1;
   out_7477881548046546380[11] = 0;
   out_7477881548046546380[12] = 0;
   out_7477881548046546380[13] = 0;
   out_7477881548046546380[14] = 0;
   out_7477881548046546380[15] = 0;
   out_7477881548046546380[16] = 0;
   out_7477881548046546380[17] = 0;
   out_7477881548046546380[18] = 0;
   out_7477881548046546380[19] = 0;
   out_7477881548046546380[20] = 0;
   out_7477881548046546380[21] = 0;
   out_7477881548046546380[22] = 0;
   out_7477881548046546380[23] = 0;
   out_7477881548046546380[24] = 0;
   out_7477881548046546380[25] = 0;
   out_7477881548046546380[26] = 0;
   out_7477881548046546380[27] = 0;
   out_7477881548046546380[28] = 0;
   out_7477881548046546380[29] = 0;
   out_7477881548046546380[30] = 0;
   out_7477881548046546380[31] = 0;
   out_7477881548046546380[32] = 0;
   out_7477881548046546380[33] = 1;
   out_7477881548046546380[34] = 0;
   out_7477881548046546380[35] = 0;
   out_7477881548046546380[36] = 0;
   out_7477881548046546380[37] = 0;
   out_7477881548046546380[38] = 0;
   out_7477881548046546380[39] = 0;
   out_7477881548046546380[40] = 0;
   out_7477881548046546380[41] = 0;
   out_7477881548046546380[42] = 0;
   out_7477881548046546380[43] = 0;
   out_7477881548046546380[44] = 0;
   out_7477881548046546380[45] = 0;
   out_7477881548046546380[46] = 0;
   out_7477881548046546380[47] = 0;
   out_7477881548046546380[48] = 0;
   out_7477881548046546380[49] = 0;
   out_7477881548046546380[50] = 0;
   out_7477881548046546380[51] = 0;
   out_7477881548046546380[52] = 0;
   out_7477881548046546380[53] = 0;
   out_7477881548046546380[54] = 0;
   out_7477881548046546380[55] = 0;
   out_7477881548046546380[56] = 1;
   out_7477881548046546380[57] = 0;
   out_7477881548046546380[58] = 0;
   out_7477881548046546380[59] = 0;
   out_7477881548046546380[60] = 0;
   out_7477881548046546380[61] = 0;
   out_7477881548046546380[62] = 0;
   out_7477881548046546380[63] = 0;
   out_7477881548046546380[64] = 0;
   out_7477881548046546380[65] = 0;
}
void h_33(double *state, double *unused, double *out_647308732637373812) {
   out_647308732637373812[0] = state[16];
   out_647308732637373812[1] = state[17];
   out_647308732637373812[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3196505250319696083) {
   out_3196505250319696083[0] = 0;
   out_3196505250319696083[1] = 0;
   out_3196505250319696083[2] = 0;
   out_3196505250319696083[3] = 0;
   out_3196505250319696083[4] = 0;
   out_3196505250319696083[5] = 0;
   out_3196505250319696083[6] = 0;
   out_3196505250319696083[7] = 0;
   out_3196505250319696083[8] = 0;
   out_3196505250319696083[9] = 0;
   out_3196505250319696083[10] = 0;
   out_3196505250319696083[11] = 0;
   out_3196505250319696083[12] = 0;
   out_3196505250319696083[13] = 0;
   out_3196505250319696083[14] = 0;
   out_3196505250319696083[15] = 0;
   out_3196505250319696083[16] = 1;
   out_3196505250319696083[17] = 0;
   out_3196505250319696083[18] = 0;
   out_3196505250319696083[19] = 0;
   out_3196505250319696083[20] = 0;
   out_3196505250319696083[21] = 0;
   out_3196505250319696083[22] = 0;
   out_3196505250319696083[23] = 0;
   out_3196505250319696083[24] = 0;
   out_3196505250319696083[25] = 0;
   out_3196505250319696083[26] = 0;
   out_3196505250319696083[27] = 0;
   out_3196505250319696083[28] = 0;
   out_3196505250319696083[29] = 0;
   out_3196505250319696083[30] = 0;
   out_3196505250319696083[31] = 0;
   out_3196505250319696083[32] = 0;
   out_3196505250319696083[33] = 0;
   out_3196505250319696083[34] = 0;
   out_3196505250319696083[35] = 0;
   out_3196505250319696083[36] = 0;
   out_3196505250319696083[37] = 0;
   out_3196505250319696083[38] = 0;
   out_3196505250319696083[39] = 1;
   out_3196505250319696083[40] = 0;
   out_3196505250319696083[41] = 0;
   out_3196505250319696083[42] = 0;
   out_3196505250319696083[43] = 0;
   out_3196505250319696083[44] = 0;
   out_3196505250319696083[45] = 0;
   out_3196505250319696083[46] = 0;
   out_3196505250319696083[47] = 0;
   out_3196505250319696083[48] = 0;
   out_3196505250319696083[49] = 0;
   out_3196505250319696083[50] = 0;
   out_3196505250319696083[51] = 0;
   out_3196505250319696083[52] = 0;
   out_3196505250319696083[53] = 0;
   out_3196505250319696083[54] = 0;
   out_3196505250319696083[55] = 0;
   out_3196505250319696083[56] = 0;
   out_3196505250319696083[57] = 0;
   out_3196505250319696083[58] = 0;
   out_3196505250319696083[59] = 0;
   out_3196505250319696083[60] = 0;
   out_3196505250319696083[61] = 0;
   out_3196505250319696083[62] = 1;
   out_3196505250319696083[63] = 0;
   out_3196505250319696083[64] = 0;
   out_3196505250319696083[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4036743294061050586) {
  H(in_vec, out_4036743294061050586);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6947062082576798062) {
  err_fun(nom_x, delta_x, out_6947062082576798062);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8661898495616572542) {
  inv_err_fun(nom_x, true_x, out_8661898495616572542);
}
void live_H_mod_fun(double *state, double *out_4036017927418152076) {
  H_mod_fun(state, out_4036017927418152076);
}
void live_f_fun(double *state, double dt, double *out_8391428159294924764) {
  f_fun(state,  dt, out_8391428159294924764);
}
void live_F_fun(double *state, double dt, double *out_5927393985392724208) {
  F_fun(state,  dt, out_5927393985392724208);
}
void live_h_4(double *state, double *unused, double *out_4558481456706131091) {
  h_4(state, unused, out_4558481456706131091);
}
void live_H_4(double *state, double *unused, double *out_8080000973382925894) {
  H_4(state, unused, out_8080000973382925894);
}
void live_h_9(double *state, double *unused, double *out_2276892122715450524) {
  h_9(state, unused, out_2276892122715450524);
}
void live_H_9(double *state, double *unused, double *out_7477881548046546380) {
  H_9(state, unused, out_7477881548046546380);
}
void live_h_10(double *state, double *unused, double *out_4026703298045680701) {
  h_10(state, unused, out_4026703298045680701);
}
void live_H_10(double *state, double *unused, double *out_2448940172280810086) {
  H_10(state, unused, out_2448940172280810086);
}
void live_h_12(double *state, double *unused, double *out_5712336716329959106) {
  h_12(state, unused, out_5712336716329959106);
}
void live_H_12(double *state, double *unused, double *out_2699614786644175230) {
  H_12(state, unused, out_2699614786644175230);
}
void live_h_35(double *state, double *unused, double *out_4970707749006197317) {
  h_35(state, unused, out_4970707749006197317);
}
void live_H_35(double *state, double *unused, double *out_7000081042954018346) {
  H_35(state, unused, out_7000081042954018346);
}
void live_h_32(double *state, double *unused, double *out_4166821487427803763) {
  h_32(state, unused, out_4166821487427803763);
}
void live_H_32(double *state, double *unused, double *out_4295056530052268409) {
  H_32(state, unused, out_4295056530052268409);
}
void live_h_13(double *state, double *unused, double *out_1717094679509158869) {
  h_13(state, unused, out_1717094679509158869);
}
void live_H_13(double *state, double *unused, double *out_1053869890820687685) {
  H_13(state, unused, out_1053869890820687685);
}
void live_h_14(double *state, double *unused, double *out_2276892122715450524) {
  h_14(state, unused, out_2276892122715450524);
}
void live_H_14(double *state, double *unused, double *out_7477881548046546380) {
  H_14(state, unused, out_7477881548046546380);
}
void live_h_33(double *state, double *unused, double *out_647308732637373812) {
  h_33(state, unused, out_647308732637373812);
}
void live_H_33(double *state, double *unused, double *out_3196505250319696083) {
  H_33(state, unused, out_3196505250319696083);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
